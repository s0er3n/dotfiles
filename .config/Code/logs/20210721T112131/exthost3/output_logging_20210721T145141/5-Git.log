Validating found git in: git
Verwenden von Git 2.32.0 von git
> git rev-parse --git-dir
Open repository: /home/soeren/Programming/newsletter-website-backend
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git show --textconv :api/main.py
> git ls-files --stage -- /home/soeren/Programming/newsletter-website-backend/api/main.py
> git cat-file -s 9dd25e1e246233412f717f0a75b3c012afd199fc
> git show --textconv :api/main.py
> git ls-files --stage -- /home/soeren/Programming/newsletter-website-backend/api/main.py
> git cat-file -s 9dd25e1e246233412f717f0a75b3c012afd199fc
> git check-ignore -v -z --stdin
> git show --textconv :Dockerfile
> git ls-files --stage -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git cat-file -s 3ddfe9127a3cdae2c268fe5d56c61e3b506bd564
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv HEAD:Dockerfile
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git add -A -- .
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git -c user.useConfigOnly=true commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git config --get commit.template
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git show --textconv HEAD:Dockerfile
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git log --oneline --cherry master...master@{upstream} --
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git pull --tags origin master
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git show --textconv HEAD:Dockerfile
From github.com:s0er3n/newsletter-website-backend
 * branch            master     -> FETCH_HEAD
hint: Pulling without specifying how to reconcile divergent branches is
hint: discouraged. You can squelch this message by running one of the following
hint: commands sometime before your next pull:
hint: 
hint:   git config pull.rebase false  # merge (the default strategy)
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
> git push origin master:master
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git show --textconv HEAD:Dockerfile
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
remote: 
remote: Heads up! The branch 'master' that you pushed to was renamed to 'main'.        
remote: 
To github.com:s0er3n/newsletter-website-backend.git
   3ae0da0..a6323e4  master -> master
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-tree -l HEAD -- /home/soeren/Programming/newsletter-website-backend/Dockerfile
> git show --textconv HEAD:Dockerfile
